1)package day1;

import java.util.Scanner;

public class reverse_stack {
  char stack[];
  int tos,max;
  
  void createstack(int size)
  {
	  stack=new char[size];
	  max=size;
	  tos=-1;
  }
  void push(char a)
  {
	  tos++;
	  stack[tos]=a;
	  
  }
  char pop()
  {
	  char t=stack[tos];
	  tos--;
	  return t;
  }
	
  char peek()
  {
	  return stack[tos];
  }
  
  Boolean is_empty()
  {
	  if(stack[tos]==-1)
		  return true;
	  else
          return false;
	  
  }
  boolean is_full()
  {
      if(tos==max-1)
          return true;
      else
          return false;
  }
  void print_stack()
  {
      for(int i=tos;i>-1;i--)
          System.out.println(stack[i]);
  }
public static void main(String[] args) {
	    Scanner sc=new Scanner(System.in);
	    System.out.println("Enter a string");
	    String s=sc.nextLine();
	    reverse_stack o=new reverse_stack();
	    char c=s.charAt(0);
	    reverse_stack o1=new reverse_stack();
	    o.createstack(s.length());
	    o1.createstack(s.length());
	    for(int i=0;i<s.length();i++)
	    {
	    	o.push(s.charAt(i));	
	    	
	    	
	    }
	    for(int j=0;j<s.length();j++)
	    {
	    	if(!o1.is_full())
	    	{
	    		o1.push(o.peek());
	    		o.pop();
	    	
	    	}
	    	else
	    	{
	    		System.out.println("Stack is empty");
	    	}
	    }
	    o1.print_stack();
	    }
       
      
	}

2)
//postfox evaluation
package day1;
import java.util.Scanner;
public class postfixeva {
	
	 int stack[],tos,MaxSize;
	    
	    void createStack(int size)
	    {
	        stack=new int[size];
	        MaxSize=size;
	        tos=-1;
	    }
	    void push(int e)
	    {
	        tos++;
	        stack[tos]=e;
	        //or stack[++tos]=e;
	    }
	    int pop()
	    {
	        int temp=stack[tos];
	        tos--;
	        return(temp);
	    }
	    int peek()
	    {
	        return(stack[tos]);
	    }
	    boolean is_full()
	    {
	        if(tos==MaxSize-1)
	            return true;
	        else
	            return false;
	    }
	     boolean is_empty()
	    {
	        if(tos==-1)
	            return true;
	        else
	            return false;
	    }
	     
	     void print_stack()
	     {
	         for(int i=tos;i>-1;i--)
	             System.out.println(stack[i]);
	     }
public static void main(String[] args) {
Scanner sc=new Scanner(System.in);
	    String s=sc.nextLine();
	    
	    postfixeva o=new postfixeva();
	    o.createStack(s.length());
	    for(int i=0;i<s.length();i++)
	    {
	      char c=s.charAt(i);
	      if(Character.isDigit(c))
	      {
	    	  o.push(Character.getNumericValue(c));
	      }
	      else
	      {
	    	  int n1=o.pop();
	    	  int n2=o.pop();
	    	  switch(c)
	    	  {
	    	  case '+':
	    	  o.push(n2+n1);
	    	  break;
	    	  case '-':
	    	o.push(n2-n1);
	    	   break;
	    	  case '*':
	    		  o.push(n2*n1);
	    	   break;
	    	  case '/':
	    		  o.push(n2/n1);
	    	   break;
	    	   default:
	    		   System.out.println("Enter a valid statement");
	    	  break;
	    	  }
	    	  
	      }
	    }
	    System.out.println(o.peek());
	
	}

}

